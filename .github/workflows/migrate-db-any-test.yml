name: Migrate db (any) # Display name on github

on:
    workflow_dispatch:
        # User chooses the following inputs
        inputs:
            environment:
                required: true
                type: choice
                description: Which environment to run for
                options:
                    - dev
                    - uat
                    - prod
            database:
                required: true
                type: choice
                description: Which database to run on
                options:
                    - db-main
                    - db-gars
            rolled-back:
                required: false
                description: Rollback Migration
                type: string
            applied:
                required: false
                description: Applied Migration
                type: string

env:
    # Cloud Variables
    PROJECT_ID: agrosapi-213321 # Used in 'Setup GCP' step
    REGION: us-central1 # Used in 'Connect to AWS'

jobs:
    migrate:
        # !! Set environment-specific ENV variables for DEV !!
        name: Migrate DB
        runs-on: ubuntu-latest
        # echo "GREETING=Whazzaaaap" >> $GITHUB_ENV
        steps:
            # Set DEV Environment
            - name: Set DEV DB url
              if: ${{ github.event.inputs.environment == 'dev' }}
              env:
                  Db_Url: postgres://admin:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/agros_db_dev?schema=main
              run: echo "DATABASE_URL=$Db_Url" >> $GITHUB_ENV

            - name: Set DEV GARS DB url
              if: ${{ github.event.inputs.environment == 'dev' }}
              env:
                  Gars_Url: postgres://postgres:${{ secrets.DB_GARS_PASSWORD }}@127.0.0.1:5431/agros_gars_dev
              run: echo "GARS_DATABASE_URL=$Gars_Url" >> $GITHUB_ENV

            # Set UAT Environment
            - name: Set UAT DB url
              if: ${{ github.event.inputs.environment == 'uat' }}
              env:
                  Db_Url: postgres://admin:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/agros_db_uat?schema=main
              run: echo "DATABASE_URL=$Db_Url" >> $GITHUB_ENV

            - name: Set UAT GARS DB url
              if: ${{ github.event.inputs.environment == 'uat' }}
              env:
                  Gars_Url: postgres://postgres:${{ secrets.DB_GARS_PASSWORD }}@127.0.0.1:5431/agros_gars_uat
              run: echo "GARS_DATABASE_URL=$Gars_Url" >> $GITHUB_ENV

            # Set PROD Environment
            - name: Set PROD DB url
              if: ${{ github.event.inputs.environment == 'prod' }}
              env:
                  Db_Url: postgres://admin:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/agros_db_prod?schema=main
              run: echo "DATABASE_URL=$Db_Url" >> $GITHUB_ENV

            - name: Set PROD GARS DB url
              if: ${{ github.event.inputs.environment == 'prod' }}
              env:
                  Gars_Url: postgres://postgres:${{ secrets.DB_GARS_PASSWORD }}@127.0.0.1:5431/agros_gars_prod
              run: echo "GARS_DATABASE_URL=$Gars_Url" >> $GITHUB_ENV

            # Set database working directory as 'main'
            - name: Set working directory as 'MAIN'
              if: ${{ github.event.inputs.database == 'db-main' }}
              env:
                  Db_Main: ./databases/main
              run: echo "WORKING_DIR=$Db_Main" >> $GITHUB_ENV

            # Set database working directory as 'gars'
            - name: Set working directory as 'GARS'
              if: ${{ github.event.inputs.database == 'db-gars' }}
              env:
                  Db_Main: ./databases/clients/gars
              run: echo "WORKING_DIR=$Db_Main" >> $GITHUB_ENV
            # if: ${{ github.event.inputs.database == 'db-main' }}
            # env:
            #   WORKING_DIR: ./databases/main
            # # Set database working directory as 'gars'
            # if: ${{ github.event.inputs.database == 'db-gars' }}
            # env:
            #   WORKING_DIR: ./databases/clients/gars

            - name: "Read ENVs"
              run: echo "Here are the ENVs ... DATABASE_URL = $DATABASE_URL, GARS_DATABASE_URL = $GARS_DATABASE_URL, WORKING_DIR = $WORKING_DIR"
# Can't share ENVs between jobs, because they run on different machines
# read_envs_job:
#     runs-on: ubuntu-latest
#     needs: set_dev_envs_job
#     # env:
#     # Greeting: Hello # ENV - available to all STEPS of THIS job
#     steps:
#         - name: "Read ENVs"
#           run: echo "DATABASE_URL = $DATABASE_URL, GARS_DATABASE_URL = $GARS_DATABASE_URL"

# double_check:
# needs: greeting_job
# runs-on: ubuntu-latest
# steps:
#     - name: "Say Hello Mona it's Wednesday"
#       run: echo "$GREETING $First_Name. Today is $DAY_OF_WEEK!"
#       env:
#           First_Name: Mona # ENV - available to THIS step only

# Returns 'Hello Mona. Today is Monday!'

# setup-job:
#     runs-on: ubuntu-latest
#     outputs:
#         var1: ${{ steps.set-variable.outputs.test }}
#     steps:
#         - uses: actions/checkout@v3
#         - name: Set test variable
#           id: set-variable
#           run: |
#               if [ ${{ github.ref }} != 'refs/heads/main' ]; then
#                 echo "IS NOT main branch"
#                 echo "::set-output name=test::abc"
#               else
#                 echo "IS main branch"
#                 echo "::set-output name=test::123"
#               fi
#           shell: bash
#         - name: Read exported variable
#           run: |
#               echo "OUTPUT: ${{ steps.check.test-env.test }}"

# subsequent-job:
#     runs-on: ubuntu-latest
#     needs: [setup-job]
#     steps:
#         - uses: actions/checkout@v2
#         - name: Read exported variable
#           run: |
#               echo "OUTPUT: ${{needs.setup-job.outputs.var1}}"
